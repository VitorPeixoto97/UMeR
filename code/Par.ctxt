#BlueJ class context
comment0.target=Par
comment1.params=x
comment1.target=void\ setX(double)
comment1.text=Setter\ da\ coordenada\ X.
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=toString\ da\ classe
comment11.params=destino
comment11.target=double\ distance(Par)
comment11.text=\ Fun\u00E7ao\ que\ calcula\ a\ distancia\ entre\ um\ certa\ posi\u00E7ao\ e\ o\ destino,\ para\ isso\n\ utiliza-se\ a\ formula\ da\ distancia\ entre\ dois\ pontos.\n
comment2.params=y
comment2.target=void\ setY(double)
comment2.text=Getter\ da\ coordenada\ Y.
comment3.params=
comment3.target=double\ getX()
comment3.text=Getter\ da\ coordenada\ X.
comment4.params=
comment4.target=double\ getY()
comment4.text=Setter\ da\ coordenada\ Y.
comment5.params=
comment5.target=Par()
comment5.text=Construtor\ que\ inicializa\ as\ variaveis.
comment6.params=p
comment6.target=Par(Par)
comment6.text=Recebe\ a\ propria\ classe\ iguala\ as\ coordenadas\ x\ e\ y\ ao\ seus\ getters.
comment7.params=x\ y
comment7.target=Par(double,\ double)
comment7.text=Recebe\ como\ parametro\ as\ coordenadas\ altera\ o\ valor\ do\ this.x\ e\ o\ this.y\ para\ esse\ x\ e\ y.
comment8.params=
comment8.target=Par\ clone()
comment8.text=Faz\ o\ clone\ das\ Coordenadas.
comment9.params=p
comment9.target=boolean\ equals(Par)
comment9.text=Faz\ os\ equals,\ isto\ e\ verifica\ se\ as\ coordenadas\ sao\ iguais.
numComments=12
