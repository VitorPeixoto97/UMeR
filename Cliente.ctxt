#BlueJ class context
comment0.target=Cliente
comment1.params=
comment1.target=Par\ getCoords()
comment1.text=Getter\ das\ coordenadas.
comment10.params=c
comment10.target=boolean\ equals(Cliente)
comment10.text=Fun\u00E7ao\ equals\ que\ verifica\ se\ clientes\ sao\ iguais\ pelos\ seus\ emails.
comment2.params=coords
comment2.target=void\ setCoords(Par)
comment2.text=Setter\ das\ coordenadas.
comment3.params=
comment3.target=double\ getGastos()
comment3.text=Getter\ dos\ gastos.
comment4.params=gastos
comment4.target=void\ setGastos(double)
comment4.text=Setter\ dos\ gastos.
comment5.params=
comment5.target=Cliente()
comment5.text=Inicializa\ as\ variaveis.
comment6.params=c
comment6.target=Cliente(Cliente)
comment6.text=Construtor\ parameterizado\ que\ recebe\ a\ propria\ classe.
comment7.params=email\ nome\ password\ morada\ nascimento\ x\ y\ gastos
comment7.target=Cliente(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ int,\ double,\ double,\ double)
comment7.text=Construtor\ parameterizado\ que\ recebe\ as\ variaveis\ de\ instancia\ da\ superclasse\ Atores\ com\ o\ super().
comment8.params=
comment8.target=Cliente\ clone()
comment8.text=Clone\ do\ Cliente.
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=Fun\u00E7ao\ toString.
numComments=11
